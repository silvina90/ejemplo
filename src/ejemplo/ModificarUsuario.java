/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemplo;

import DAO.GenericDAOImplHibernate;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author usuario
 */
public class ModificarUsuario extends javax.swing.JFrame {
    
    DefaultTableModel modelo = new DefaultTableModel();
    GenericDAOImplHibernate<Persona> pe = new GenericDAOImplHibernate<>();
    ArrayList<Persona> personas = (ArrayList<Persona>) pe.Buscar();
    bajaUsuario bu=new bajaUsuario();
    Object[] columnNames= new Object[2];
    /**
     * Creates new form ModificarUsuario
     */
    public ModificarUsuario() {
        initComponents();
        bu.cargarCombo(comboPersonas);
         setLocationRelativeTo(null);
        AutoCompleteDecorator.decorate(this.comboPersonas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboPersonas = new javax.swing.JComboBox();
        nombrePersona = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        direccionPersona = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cancelarModificar = new javax.swing.JButton();
        aceptarModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        comboPersonas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPersonasItemStateChanged(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Direccion");

        tablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaPersonas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaPersonasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPersonas);

        jLabel3.setText("Autos");

        cancelarModificar.setText("CANCELAR");
        cancelarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarModificarActionPerformed(evt);
            }
        });

        aceptarModificar.setText("ACEPTAR");
        aceptarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(comboPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(direccionPersona)
                                    .addComponent(nombrePersona)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(96, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cancelarModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aceptarModificar)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nombrePersona, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(direccionPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarModificar)
                    .addComponent(aceptarModificar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboPersonasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPersonasItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED){
              cargarGrilla();
              
        }
    }//GEN-LAST:event_comboPersonasItemStateChanged

    private void cancelarModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarModificarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelarModificarActionPerformed

    private void tablaPersonasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaPersonasKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyChar()== KeyEvent.VK_ENTER){
              agregaFila();
        }
    }//GEN-LAST:event_tablaPersonasKeyPressed

    private void aceptarModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarModificarActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()== this.aceptarModificar){
            List<Persona> aux=pe.BuscarPersona(comboPersonas.getSelectedItem().toString()); 
            System.out.println(aux.get(0));
            actualizar(aux.get(0));
            JOptionPane.showMessageDialog(null, "Modificado");
            limpiarPantalla();
        }
    }//GEN-LAST:event_aceptarModificarActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_TAB) 
            nombrePersona.requestFocus();
    }//GEN-LAST:event_formKeyPressed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarModificar;
    private javax.swing.JButton cancelarModificar;
    private javax.swing.JComboBox comboPersonas;
    private javax.swing.JTextField direccionPersona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombrePersona;
    private javax.swing.JTable tablaPersonas;
    // End of variables declaration//GEN-END:variables

    private void cargarGrilla() {
        modelo=(DefaultTableModel) tablaPersonas.getModel();
        List<Persona> aux=pe.BuscarPersona(comboPersonas.getSelectedItem().toString());
        int i =0;
        List<Auto> autos= aux.get(i).getAutos();
        nombrePersona.setText(aux.get(i).getNombre());
        direccionPersona.setText(aux.get(i).getDireccion());
       
        autos= borrarNull(autos);
        if (autos.isEmpty()){
            limpiarTabla();
            modelo.setRowCount(1);
        }else{
            System.out.println("else");
            limpiarTabla();
            for(Auto autosNext: autos){
            columnNames[0]=autosNext.getMarca();
            columnNames[1]=autosNext.getPatente();
            modelo.addRow(columnNames);
            }
        }     
    }    
    private void limpiarTabla(){
    modelo=(DefaultTableModel) tablaPersonas.getModel();
    modelo.setRowCount(0);
    }

    private List<Auto> borrarNull(List<Auto> autos) {
       int f=0; 
       List<Auto> aux = new ArrayList<Auto> ();
       while (f<autos.size()){
        //   System.out.println("I"+f+"tamanio"+autos.size());  
            if (autos.get(f)!=null){
                aux.add(autos.get(f));
            }   
         f++;
    } 
     return aux;
     
    }
    public void agregaFila(){
     Object[] columnNames1= new Object[2];   
     DefaultTableModel modelo=(DefaultTableModel) tablaPersonas.getModel();
     modelo.addRow(columnNames1);
    }

    private void actualizar(Persona get) {
        int ID=get.getId();
        String NyA= nombrePersona.getText();
        String Dir= direccionPersona.getText();
        Persona persona= new Persona();
        ArrayList<Auto> autos = new ArrayList<Auto>();
        String aux;
            for (int j = 0; j < modelo.getRowCount(); j++) {
                 Auto auto = new Auto();
            if ((modelo.getValueAt(j, 0)==null) && (modelo.getValueAt(j, 1)==null)){
                 modelo.removeRow(j);
            }else{
                aux=(String) modelo.getValueAt(j,0);
                auto.setMarca(aux);
                aux=(String) modelo.getValueAt(j,1);
                auto.setPatente(aux);
                autos.add(auto); 
                
            }
            persona.setId(ID);
            persona.setDireccion(Dir);
            persona.setNombre(NyA);
            persona.getAutos().addAll(autos);
            }
            pe.Actualizar(persona);
    } 
    
    private void limpiarPantalla() {
        nombrePersona.setText(null);
        direccionPersona.setText(null);
        for (int j = 0; j < modelo.getRowCount(); j++) {
        modelo.setValueAt(null, j, 0);
        modelo.setValueAt(null, j, 1); 
        }
    }
}
